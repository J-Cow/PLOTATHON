theme(panel.background = element_rect(fill = "#265a56"),
panel.grid.major = element_line(color = "black"),
panel.grid.minor = element_line(color = "black"),
plot.background = element_rect(fill = "black"),
axis.text = element_text(color = "white"),
axis.title = element_text(color = "white")) +
labs(
y = 'Review Count',
title = "Average Stars for Hotels"
)
Hotels |>
ggplot(aes(Stars, Review.Count)) +
geom_col(fill = "#ffc39a") +
labs(
y = 'Review Count',
title = "Average Stars for Hotels"
) +
theme(panel.background = element_rect(fill = "#265a56"),
panel.grid.major = element_line(color = "black"),
panel.grid.minor = element_line(color = "black"),
plot.background = element_rect(fill = "black"),
axis.text = element_text(color = "white"),
axis.title = element_text(color = "white"))
Hotels |>
ggplot(aes(Stars, Review.Count)) +
geom_col(fill = "#ffc39a") +
theme(panel.background = element_rect(fill = "#265a56"),
panel.grid.major = element_line(color = "black"),
panel.grid.minor = element_line(color = "black"),
plot.background = element_rect(fill = "black"),
axis.text = element_text(color = "white"),
axis.title = element_text(color = "white"),
element_text(color = "white")) +
labs(
y = 'Review Count',
title = "Average Stars for Hotels"
)
Hotels |>
ggplot(aes(Stars, Review.Count)) +
geom_col(fill = "#ffc39a") +
theme(panel.background = element_rect(fill = "#265a56"),
panel.grid.major = element_line(color = "black"),
panel.grid.minor = element_line(color = "black"),
plot.background = element_rect(fill = "black"),
axis.text = element_text(color = "white"),
axis.title = element_text(color = "white"),
title = element_text(color = "white")) +
labs(
y = 'Review Count',
title = "Average Stars for Hotels"
)
OriginalData |>
ggplot(aes(Stars, Review.Count)) +
geom_col(fill = "#ffc39a") +
theme(panel.background = element_rect(fill = "#265a56"),
panel.grid.major = element_line(color = "black"),
panel.grid.minor = element_line(color = "black"),
plot.background = element_rect(fill = "black"),
axis.text = element_text(color = "white"),
axis.title = element_text(color = "white"),
title = element_text(color = "white")) +
labs(
y = 'Review Count',
title = "Average Stars for Hotels"
)
# Graph for the top hotel
df_DistFromHotelTop1 <- data.frame()
for (i in 1:4013) {
if (distm(c(Hotels$Long[1],Hotels$Lat[1]),
c(OriginalData$Longitude[i],OriginalData$Latitude[i]),
fun = distHaversine) <= 500) {
df_DistFromHotelTop1 <- rbind(df_DistFromHotelTop1,OriginalData[i,])
}
}
sf_df_DistFromHotelTop1 <- st_as_sf(df_DistFromHotelTop1,
coords = c("Longitude", "Latitude"),  crs = 4326)
df_DistFromHotelTop2 <- data.frame()
for (i in 1:4013) {
if (distm(c(Hotels$Long[1],Hotels$Lat[1]),
c(OriginalData$Longitude[i],OriginalData$Latitude[i]),
fun = distHaversine) <= 500) {
df_DistFromHotelTop2 <- rbind(df_DistFromHotelTop2,OriginalData[i,])
}
}
sf_df_DistFromHotelTop2 <- st_as_sf(df_DistFromHotelTop2,
coords = c("Longitude", "Latitude"),  crs = 4326)
df_DistFromHotelMid1 <- data.frame()
for (i in 1:4013) {
if (distm(c(Hotels$Long[1],Hotels$Lat[1]),
c(OriginalData$Longitude[i],OriginalData$Latitude[i]),
fun = distHaversine) <= 500) {
df_DistFromHotelMid1 <- rbind(df_DistFromHotelMid1,OriginalData[i,])
}
}
sf_df_DistFromHotelMid1 <- st_as_sf(df_DistFromHotelMid1,
coords = c("Longitude", "Latitude"),  crs = 4326)
df_DistFromHotelMid2 <- data.frame()
for (i in 1:4013) {
if (distm(c(Hotels$Long[1],Hotels$Lat[1]),
c(OriginalData$Longitude[i],OriginalData$Latitude[i]),
fun = distHaversine) <= 500) {
df_DistFromHotelMid2 <- rbind(df_DistFromHotelMid2,OriginalData[i,])
}
}
sf_df_DistFromHotelMid2 <- st_as_sf(df_DistFromHotelMid2,
coords = c("Longitude", "Latitude"),  crs = 4326)
df_DistFromHotelBot1 <- data.frame()
for (i in 1:4013) {
if (distm(c(Hotels$Long[1],Hotels$Lat[1]),
c(OriginalData$Longitude[i],OriginalData$Latitude[i]),
fun = distHaversine) <= 500) {
df_DistFromHotelBot1 <- rbind(df_DistFromHotelBot1,OriginalData[i,])
}
}
sf_df_DistFromHotelBot1 <- st_as_sf(df_DistFromHotelBot1,
coords = c("Longitude", "Latitude"),  crs = 4326)
df_DistFromHotelBot2 <- data.frame()
for (i in 1:4013) {
if (distm(c(Hotels$Long[1],Hotels$Lat[1]),
c(OriginalData$Longitude[i],OriginalData$Latitude[i]),
fun = distHaversine) <= 500) {
df_DistFromHotelBot2 <- rbind(df_DistFromHotelBot2,OriginalData[i,])
}
}
sf_df_DistFromHotelBot2 <- st_as_sf(df_DistFromHotelBot2,
coords = c("Longitude", "Latitude"),  crs = 4326)
Hotels |>
ggplot(aes(Stars, Review.Count)) +
geom_col(fill = "#ffc39a") +
theme(panel.background = element_rect(fill = "#265a56"),
panel.grid.major = element_line(color = "black"),
panel.grid.minor = element_line(color = "black"),
plot.background = element_rect(fill = "black"),
axis.text = element_text(color = "white"),
axis.title = element_text(color = "white"),
title = element_text(color = "white")) +
labs(
y = 'Review Count',
title = "Average Stars for Hotels"
)
OriginalData |>
ggplot(aes(Stars, Review.Count)) +
geom_col(fill = "#ffc39a") +
theme(panel.background = element_rect(fill = "#265a56"),
panel.grid.major = element_line(color = "black"),
panel.grid.minor = element_line(color = "black"),
plot.background = element_rect(fill = "black"),
axis.text = element_text(color = "white"),
axis.title = element_text(color = "white"),
title = element_text(color = "white")) +
labs(
y = 'Review Count',
title = "Average Stars for All Data"
)
# Graph for the top hotel
df_DistFromHotelTop1 <- data.frame()
for (i in 1:4013) {
if (distm(c(Hotels$Long[14],Hotels$Lat[14]),
c(OriginalData$Longitude[i],OriginalData$Latitude[i]),
fun = distHaversine) <= 500) {
df_DistFromHotelTop1 <- rbind(df_DistFromHotelTop1,OriginalData[i,])
}
}
sf_df_DistFromHotelTop1 <- st_as_sf(df_DistFromHotelTop1,
coords = c("Longitude", "Latitude"),  crs = 4326)
df_DistFromHotelTop2 <- data.frame()
for (i in 1:4013) {
if (distm(c(Hotels$Long[82],Hotels$Lat[82]),
c(OriginalData$Longitude[i],OriginalData$Latitude[i]),
fun = distHaversine) <= 500) {
df_DistFromHotelTop2 <- rbind(df_DistFromHotelTop2,OriginalData[i,])
}
}
sf_df_DistFromHotelTop2 <- st_as_sf(df_DistFromHotelTop2,
coords = c("Longitude", "Latitude"),  crs = 4326)
df_DistFromHotelMid1 <- data.frame()
for (i in 1:4013) {
if (distm(c(Hotels$Long[71],Hotels$Lat[71]),
c(OriginalData$Longitude[i],OriginalData$Latitude[i]),
fun = distHaversine) <= 500) {
df_DistFromHotelMid1 <- rbind(df_DistFromHotelMid1,OriginalData[i,])
}
}
sf_df_DistFromHotelMid1 <- st_as_sf(df_DistFromHotelMid1,
coords = c("Longitude", "Latitude"),  crs = 4326)
df_DistFromHotelMid2 <- data.frame()
for (i in 1:4013) {
if (distm(c(Hotels$Long[49],Hotels$Lat[49]),
c(OriginalData$Longitude[i],OriginalData$Latitude[i]),
fun = distHaversine) <= 500) {
df_DistFromHotelMid2 <- rbind(df_DistFromHotelMid2,OriginalData[i,])
}
}
sf_df_DistFromHotelMid2 <- st_as_sf(df_DistFromHotelMid2,
coords = c("Longitude", "Latitude"),  crs = 4326)
df_DistFromHotelBot1 <- data.frame()
for (i in 1:4013) {
if (distm(c(Hotels$Long[72],Hotels$Lat[72]),
c(OriginalData$Longitude[i],OriginalData$Latitude[i]),
fun = distHaversine) <= 500) {
df_DistFromHotelBot1 <- rbind(df_DistFromHotelBot1,OriginalData[i,])
}
}
sf_df_DistFromHotelBot1 <- st_as_sf(df_DistFromHotelBot1,
coords = c("Longitude", "Latitude"),  crs = 4326)
df_DistFromHotelBot2 <- data.frame()
for (i in 1:4013) {
if (distm(c(Hotels$Long[101],Hotels$Lat[101]),
c(OriginalData$Longitude[i],OriginalData$Latitude[i]),
fun = distHaversine) <= 500) {
df_DistFromHotelBot2 <- rbind(df_DistFromHotelBot2,OriginalData[i,])
}
}
sf_df_DistFromHotelBot2 <- st_as_sf(df_DistFromHotelBot2,
coords = c("Longitude", "Latitude"),  crs = 4326)
mapview(df_DistFromHotelTop1, map.types = "CartoDB.DarkMatter",
zcol="Stars") +
mapview(sf_Hotels[1,], map.types = "CartoDB.DarkMatter") +
mapview(df_DistFromHotelTop2) +
#mapview() +
mapview(sf_df_DistFromHotelMid1) +
#mapview() +
mapview(sf_df_DistFromHotelMid2) +
#mapview() +
mapview(sf_df_DistFromHotelBot1) +
#mapview() +
mapview(sf_df_DistFromHotelBot2)
mapview(df_DistFromHotelTop1, map.types = "CartoDB.DarkMatter",
zcol="Stars") +
mapview(sf_Hotels[1,], map.types = "CartoDB.DarkMatter") +
mapview(sf_df_DistFromHotelTop2) +
#mapview() +
mapview(sf_df_DistFromHotelMid1) +
#mapview() +
mapview(sf_df_DistFromHotelMid2) +
#mapview() +
mapview(sf_df_DistFromHotelBot1) +
#mapview() +
mapview(sf_df_DistFromHotelBot2)
mapview(sf_df_DistFromHotelTop1, map.types = "CartoDB.DarkMatter",
zcol="Stars") +
mapview(sf_Hotels[1,], map.types = "CartoDB.DarkMatter") +
mapview(sf_df_DistFromHotelTop2) +
#mapview() +
mapview(sf_df_DistFromHotelMid1) +
#mapview() +
mapview(sf_df_DistFromHotelMid2) +
#mapview() +
mapview(sf_df_DistFromHotelBot1) +
#mapview() +
mapview(sf_df_DistFromHotelBot2)
mapview(sf_df_DistFromHotelTop1, map.types = "CartoDB.DarkMatter",
zcol="Stars") +
mapview(sf_Hotels[1,], map.types = "CartoDB.DarkMatter") +
mapview(sf_df_DistFromHotelTop2,
zcol="Stars") +
#mapview() +
mapview(sf_df_DistFromHotelMid1,
zcol="Stars") +
#mapview() +
mapview(sf_df_DistFromHotelMid2,
zcol="Stars") +
#mapview() +
mapview(sf_df_DistFromHotelBot1,
zcol="Stars") +
#mapview() +
mapview(sf_df_DistFromHotelBot2,
zcol="Stars")
mapview(sf_df_DistFromHotelTop1, map.types = "CartoDB.DarkMatter",
zcol="Stars",legend = F) +
mapview(sf_Hotels[1,], map.types = "CartoDB.DarkMatter") +
mapview(sf_df_DistFromHotelTop2,
zcol="Stars") +
#mapview() +
mapview(sf_df_DistFromHotelMid1,
zcol="Stars") +
#mapview() +
mapview(sf_df_DistFromHotelMid2,
zcol="Stars") +
#mapview() +
mapview(sf_df_DistFromHotelBot1,
zcol="Stars") +
#mapview() +
mapview(sf_df_DistFromHotelBot2,
zcol="Stars")
mapview(sf_df_DistFromHotelTop1, map.types = "CartoDB.DarkMatter",
zcol="Stars",legend = F) +
mapview(sf_Hotels[1,], legend = F) +
mapview(sf_df_DistFromHotelTop2,
zcol="Stars", legend = F) +
#mapview() +
mapview(sf_df_DistFromHotelMid1,
zcol="Stars", legend = F) +
#mapview() +
mapview(sf_df_DistFromHotelMid2,
zcol="Stars", legend = F) +
#mapview() +
mapview(sf_df_DistFromHotelBot1,
zcol="Stars", legend = F) +
#mapview() +
mapview(sf_df_DistFromHotelBot2,
zcol="Stars", legend = F)
mapview(sf_df_DistFromHotelTop1, map.types = "CartoDB.DarkMatter",
zcol="Stars",legend = F) +
#mapview(sf_Hotels[1,], legend = F) +
mapview(sf_df_DistFromHotelTop2,
zcol="Stars", legend = F) +
#mapview() +
mapview(sf_df_DistFromHotelMid1,
zcol="Stars", legend = F) +
#mapview() +
mapview(sf_df_DistFromHotelMid2,
zcol="Stars", legend = F) +
#mapview() +
mapview(sf_df_DistFromHotelBot1,
zcol="Stars", legend = F) +
#mapview() +
mapview(sf_df_DistFromHotelBot2,
zcol="Stars", legend = F)
mapview(sf_df_DistFromHotelTop1, map.types = "CartoDB.DarkMatter",
zcol="Stars",legend = T) +
#mapview(sf_Hotels[1,], legend = F) +
mapview(sf_df_DistFromHotelTop2,
zcol="Stars", legend = F) +
#mapview() +
mapview(sf_df_DistFromHotelMid1,
zcol="Stars", legend = F) +
#mapview() +
mapview(sf_df_DistFromHotelMid2,
zcol="Stars", legend = F) +
#mapview() +
mapview(sf_df_DistFromHotelBot1,
zcol="Stars", legend = F) +
#mapview() +
mapview(sf_df_DistFromHotelBot2,
zcol="Stars", legend = F)
mapview(sf_df_DistFromHotelTop1, map.types = "CartoDB.DarkMatter",
zcol="Stars",legend = T) +
#mapview(sf_Hotels[1,], legend = F) +
mapview(sf_df_DistFromHotelTop2,
zcol="Stars", legend = T) +
#mapview() +
mapview(sf_df_DistFromHotelMid1,
zcol="Stars", legend = T) +
#mapview() +
mapview(sf_df_DistFromHotelMid2,
zcol="Stars", legend = T) +
#mapview() +
mapview(sf_df_DistFromHotelBot1,
zcol="Stars", legend = T) +
#mapview() +
mapview(sf_df_DistFromHotelBot2,
zcol="Stars", legend = T)
summarise(mean(df_DistFromHotelTop2$Stars))
summarise(avg(df_DistFromHotelTop2$Stars))
summarize(mean(df_DistFromHotelTop2$Stars))
summarise(mean(df_DistFromHotelTop2$Stars))
View(df_DistFromHotel1)
View(df_DistFromHotelBot1)
summarise(mean(df_DistFromHotelTop2))
mean(df_DistFromHotelTop2$Stars)
df_DistFromHotelTop1 <- mutate(df_DistFromHotelTop1,
Weighted.Stars = Stars * Review.Count)
df_DistFromHotelBot1 <- mutate(df_DistFromHotelBot1,
Weighted.Stars = Stars * Review.Count)
sf_df_DistFromHotelTop2 <- mutate(sf_df_DistFromHotelTop2,
Weighted.Stars = Stars * Review.Count)
sdf_DistFromHotelTop2 <- mutate(df_DistFromHotelTop2,
Weighted.Stars = Stars * Review.Count)
df_DistFromHotelTop2 <- mutate(df_DistFromHotelTop2,
Weighted.Stars = Stars * Review.Count)
df_DistFromHotelMid1 <- mutate(df_DistFromHotelMid1,
Weighted.Stars = Stars * Review.Count)
df_DistFromHotelMid2 <- mutate(df_DistFromHotelMid2,
Weighted.Stars = Stars * Review.Count)
df_DistFromHotelBot1 <- mutate(df_DistFromHotelBot1,
Weighted.Stars = Stars * Review.Count)
df_DistFromHotelBot2 <- mutate(df_DistFromHotelBot2
,
Weighted.Stars = Stars * Review.Count)
MeanWeights <- rbind(mean(sf_df_DistFromHotelTop1$Weighted.Stars))
MeanWeights <- rbind(mean(df_DistFromHotelTop1$Weighted.Stars))
MeanWeights <- rbind(mean(df_DistFromHotelTop1$Weighted.Stars),
mean(df_DistFromHotelTop2$Weighted.Stars),
mean(df_DistFromHotelMid1$Weighted.Stars),
mean(df_DistFromHotelMid2$Weighted.Stars),
mean(df_DistFromHotelBot1$Weighted.Stars),
mean(df_DistFromHotelBot2$Weighted.Stars),)
df_DistFromHotelTop2 <- mutate(df_DistFromHotelTop2,
Weighted.Stars = Stars * Review.Count)
MeanWeights <- rbind(mean(df_DistFromHotelTop1$Weighted.Stars),
mean(df_DistFromHotelTop2$Weighted.Stars),
mean(df_DistFromHotelMid1$Weighted.Stars),
mean(df_DistFromHotelMid2$Weighted.Stars),
mean(df_DistFromHotelBot1$Weighted.Stars),
mean(df_DistFromHotelBot2$Weighted.Stars),)
View(df_DistFromHotelMid2)
MeanWeights <- c(mean(df_DistFromHotelTop1$Weighted.Stars),
mean(df_DistFromHotelTop2$Weighted.Stars),
mean(df_DistFromHotelMid1$Weighted.Stars),
mean(df_DistFromHotelMid2$Weighted.Stars),
mean(df_DistFromHotelBot1$Weighted.Stars),
mean(df_DistFromHotelBot2$Weighted.Stars),)
MeanWeights <- c()
MeanWeights <- c(mean(df_DistFromHotelTop1$Weighted.Stars),
mean(df_DistFromHotelTop2$Weighted.Stars),
mean(df_DistFromHotelMid1$Weighted.Stars),
mean(df_DistFromHotelMid2$Weighted.Stars),
mean(df_DistFromHotelBot1$Weighted.Stars),
mean(df_DistFromHotelBot2$Weighted.Stars),)
MeanWeights <- c(mean(df_DistFromHotelTop1$Weighted.Stars),
mean(df_DistFromHotelTop2$Weighted.Stars),
mean(df_DistFromHotelMid1$Weighted.Stars),
mean(df_DistFromHotelMid2$Weighted.Stars),
mean(df_DistFromHotelBot1$Weighted.Stars),
mean(df_DistFromHotelBot2$Weighted.Stars),)
MeanWeights <- c(mean(df_DistFromHotelTop1$Weighted.Stars),
mean(df_DistFromHotelTop2$Weighted.Stars),
mean(df_DistFromHotelMid1$Weighted.Stars),
mean(df_DistFromHotelMid2$Weighted.Stars),
mean(df_DistFromHotelBot1$Weighted.Stars),
mean(df_DistFromHotelBot2$Weighted.Stars))
MeanWeights <- c()
MeanWeights <- c(sum(df_DistFromHotelTop1$Weighted.Stars),
sum(df_DistFromHotelTop2$Weighted.Stars),
sum(df_DistFromHotelMid1$Weighted.Stars),
sum(df_DistFromHotelMid2$Weighted.Stars),
sum(df_DistFromHotelBot1$Weighted.Stars),
sum(df_DistFromHotelBot2$Weighted.Stars))
ggplot(MeanWeights)
MeanWeights <- data.frame(MeanWeights)
ggplot(MeanWeights) +
geom_col()
View(MeanWeights)
ggplot(MeanWeights, aes(x =  MeanWeights)) +
geom_bar()
ggplot(MeanWeights, aes(y =  MeanWeights)) +
geom_bar()
ggplot(MeanWeights, aes(x =  MeanWeights)) +
geom_col()
ggplot(MeanWeights, aes(x =  MeanWeights)) +
geom_histogram()
ggplot(MeanWeights, aes(x =  MeanWeights)) +
geom_bar()
ggplot(MeanWeights, aes(x =  "MeanWeights")) +
geom_bar()
ggplot(MeanWeights, aes(x =  MeanWeights)) +
geom_histogram()
ggplot(MeanWeights, aes(y =  MeanWeights)) +
geom_histogram()
ggplot(MeanWeights, aes(x =  round(MeanWeights))) +
geom_bar()
MeanWeights |> mutate(MeanWeights = round(MeanWeights))
MeanWeights |> mutate(MeanWeights = round(MeanWeights),
id = 1:6)
MeanWeights |> mutate(MeanWeights = round(MeanWeights),
id = as.character(1:6))
MeanWeights |> mutate(MeanWeights = round(MeanWeights),
id = as.character(1:6)) |>
uncount(MeanWeights)
wk <- MeanWeights |> mutate(MeanWeights = round(MeanWeights),
id = as.character(1:6)) |>
uncount(MeanWeights)
ggplot(wk, aes(x =  MeanWeights)) +
geom_bar()
ggplot(wk, aes(x =  id)) +
geom_bar()
View(wk)
wk <- MeanWeights |> mutate(MeanWeights = round(MeanWeights),
id = c("Top1","Top2","Mid1","Mid2","Bot1","Bot2")) |>
uncount(MeanWeights)
ggplot(wk, aes(x =  id)) +
geom_bar()
ggplot(wk, aes(x =  id)) +
geom_bar(fill = "#ffc39a") +
theme(panel.background = element_rect(fill = "#265a56"),
panel.grid.major = element_line(color = "black"),
panel.grid.minor = element_line(color = "black"),
plot.background = element_rect(fill = "black"),
axis.text = element_text(color = "white"))
ggplot(wk, aes(x =  id)) +
geom_bar(fill = "#ffc39a") +
theme(panel.background = element_rect(fill = "#265a56"),
panel.grid.major = element_line(color = "black"),
panel.grid.minor = element_line(color = "black"),
plot.background = element_rect(fill = "black"),
axis.text = element_text(color = "white")) +
labs(
title = "Weighted Stars of Each Hotel"
)
ggplot(wk, aes(x =  id)) +
geom_bar(fill = "#ffc39a") +
theme(panel.background = element_rect(fill = "#265a56"),
panel.grid.major = element_line(color = "black"),
panel.grid.minor = element_line(color = "black"),
plot.background = element_rect(fill = "black"),
axis.text = element_text(color = "white"),
title.text = element_text(color = "white")) +
labs(
title = "Weighted Stars of Each Hotel"
)
ggplot(wk, aes(x =  id)) +
geom_bar(fill = "#ffc39a") +
theme(panel.background = element_rect(fill = "#265a56"),
panel.grid.major = element_line(color = "black"),
panel.grid.minor = element_line(color = "black"),
plot.background = element_rect(fill = "black"),
axis.text = element_text(color = "white"),
title = element_text(color = "white")) +
labs(
title = "Weighted Stars of Each Hotel"
)
